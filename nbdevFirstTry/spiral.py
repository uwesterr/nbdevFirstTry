# AUTOGENERATED! DO NOT EDIT! File to edit: ../00_spiral.ipynb.

# %% auto 0
__all__ = ['t', 'v', 'B', 'r_max', 't_max', 'flag_out', 'phi_list', 'time_list', 'flag_out_list', 'r_list', 'spiral_count',
           'spiral_count_list', 'fig', 'axs', 'foo', 'say_hello', 'phi']

# %% ../00_spiral.ipynb 3
import numpy as np
import  matplotlib.pyplot as plt

# %% ../00_spiral.ipynb 4
def foo(): pass

# %% ../00_spiral.ipynb 6
def say_hello(to):
    "Say hello to somebody"
    return f'Hello {to}!'

# %% ../00_spiral.ipynb 10
t = np.linspace(0,40,100)
v = 0.11 # velocity in rad/s
B = 8.6e-6 # spiral arm distance
r_max=800e-6
t_max=3.14*(r_max)**2/(B*v)
t_max

# %% ../00_spiral.ipynb 11
def phi(B,v,t, flag_out, t_max, spiral_count): #asdfsafd
    if flag_out:
        if spiral_count==0:
            phi1 = np.sqrt(4*np.pi/B*v*(t-t_max*(spiral_count)))
        else:
        
            phi1 = np.sqrt(4*np.pi/B*v*(t-t_max*(spiral_count+1)))
        r=B*phi1/(2*np.pi)
       # print(phi1)
        if r >= 800e-6:
            flag_out=0
            spiral_count=spiral_count+1
            #t_max=t
    else:
        if ((4*np.pi/B*v*((spiral_count+1)*t_max-t))>=0):
            phi1 = np.sqrt(4*np.pi/B*v*((spiral_count+1)*t_max-t))
            
        else:
            phi1=0.0
        r=B*phi1/(2*np.pi)
        if r <= 5e-6:
            flag_out=1  
            #spiral_count=spiral_count+1  
    return phi1, flag_out, r, spiral_count


# %% ../00_spiral.ipynb 12
flag_out=1
t = np.linspace(0,12,1000)
phi_list=[]
time_list=[]
flag_out_list=[]
r_list=[]
spiral_count=0
spiral_count_list=[]
for i in t:
    #print(i)
    phi1,flag_out, r, spiral_count=phi(B,v,i, flag_out, t_max,spiral_count)
    #
    # print(phi1, flag_out)
    phi_list.append(phi1)
    time_list.append(i)
    flag_out_list.append(flag_out)
    r_list.append(r)
    spiral_count_list.append(spiral_count)


# %% ../00_spiral.ipynb 14
fig, axs = plt.subplots(2,3)

axs[0,0].plot(time_list,r_list, 'b')
axs[0,1].plot(time_list,phi_list, 'b')
axs[0,2].plot(time_list,flag_out_list, 'r')
axs[1,0].plot(time_list,spiral_count_list, 'r', label='D=1m')
# plt.title("Spiral vs time")
# plt.xlabel("time [s]")
# plt.ylabel("phi")
# show the plot
#plt.xlim((10,2e4))
#plt.ylim((1e-19,1e-12))
plt.show()
